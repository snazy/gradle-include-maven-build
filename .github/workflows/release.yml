
name: Release

on:
  # Manually triggered
  workflow_dispatch:
    inputs:
      releaseVersion:
        description: 'The version to release - e.g. `0.5.0`'
        required: true
      nextVersion:
        description: 'The NEXT version to release - e.g. `0.6.0` without the -SNAPSHOT suffix'
        required: true

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    env:
      GIT_TAG: v${{ github.event.inputs.releaseVersion }}
      RELEASE_VERSION: ${{ github.event.inputs.releaseVersion }}
      NEXT_VERSION: ${{ github.event.inputs.nextVersion }}

    steps:
      - name: Check parameters
        run: |
          if [[ ${RELEASE_VERSION} =~ ^[0-9]+[.][0-9.]*[0-9](-[a-zA-Z0-9]+)?$ ]]; then
            echo "Parameter check for 'releaseVersion' OK"
          else
            echo "Parameter check for 'releaseVersion' failed"
            exit 1
          fi
          if [[ ${NEXT_VERSION} =~ ^[0-9]+[.][0-9.]*[0-9](-[a-zA-Z0-9]+)?$ ]]; then
            echo "Parameter check for 'nextVersion' OK"
          else
            echo "Parameter check for 'nextVersion' failed"
            exit 1
          fi

      - uses: actions/checkout@v3
        with:
          fetch-depth: '0'
          submodules: 'true'

      - name: Check commit status
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | gh auth login --with-token
          SHA=$(git rev-parse HEAD)
          gh api repos/snazy/gradle-include-maven-build/commits/${SHA}/check-runs --jq 'if ([.check_runs[] | select(.name | endswith("Release") or startswith("Dependabot ") or startswith("codecov/") or startswith("Report") | not ) | .conclusion // "pending" ] | unique == ["success"] or unique == []) then "OK" else error("Commit checks are not OK") end'

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 11
          server-id: ossrh
          server-username: ${{ secrets.OSSRH_ACCESS_ID }}
          server-password: ${{ secrets.OSSRH_TOKEN }}
          gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
          gpg-passphrase: ${{ secrets.MAVEN_GPG_PASSPHRASE }}

      - name: Configure release-bot-user in git config
        run: |
          git config --global user.email "release-noreply@caffinitas.org"
          git config --global user.name "Release Workflow [bot]"

      - name: Bump to release version
        run: echo "${RELEASE_VERSION}" > version.txt

      - name: Record ${{ github.event.inputs.releaseVersion }} release in git
        run: |
          git commit -a -m "[release] v${RELEASE_VERSION}"
          git tag -f ${GIT_TAG}

      - name: Publish to Sonatype
        uses: gradle/gradle-build-action@v2
        env:
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
          ORG_GRADLE_PROJECT_sonatypeUsername: ${{ secrets.OSSRH_ACCESS_ID }}
          ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.OSSRH_TOKEN }}
        with:
          cache-read-only: true
          arguments: |
            --rerun-tasks 
            --no-watch-fs
            assemble 
            check 
            publishToSonatype 
            closeAndReleaseSonatypeStagingRepository 
            -Prelease

      - name: Bump to next development version
        run: echo "${NEXT_VERSION}-SNAPSHOT" > version.txt

      - name: Record next development version in git
        run: git commit -a -m "[release] next development version ${NEXT_VERSION}"

      - name: Push tag + branch
        run: |
          # Push directly using the remote repo URL, which includes the secret so this job can push to the repo
          UPSTREAM="https://${{ secrets.RELEASE_PAT }}@github.com/${GITHUB_REPOSITORY}.git"

          # Move the default auth settings in ~/.gitconfig out of the way, so the git-push can use the token
          git config --rename-section http.https://github.com/ http.https://save.github.com/

          git push --no-verify "${UPSTREAM}" HEAD:${GITHUB_REF} ${GIT_TAG}

          # Move the default auth settings in ~/.gitconfig back
          git config --rename-section http.https://save.github.com/ http.https://github.com/
